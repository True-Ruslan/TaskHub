name: Build and Publish Docker Container

on:
  push:
    branches: [ "master" ]
    tags: [ "v*" ]
  pull_request:
    branches: [ "master" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
      actions: read
      security-events: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven

    - name: Build with Maven
      run: mvn -B clean package -DskipTests

    # Настройка QEMU для multi-platform сборки
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    # Настройка Buildx с расширенными возможностями
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        driver-opts: |
          image=moby/buildkit:v0.12.0
        buildkitd-flags: --debug

    # Аутентификация в GitHub Container Registry
    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    # Извлечение метаданных для тегов и аннотаций
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
        labels: |
          org.opencontainers.image.title=TaskHub
          org.opencontainers.image.description=TaskHub - Task Management System
          org.opencontainers.image.vendor=TaskHub Team
          org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}

    # Сборка и публикация Docker образа
    - name: Build and push Docker image
      id: build
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        provenance: true
        sbom: true
        outputs: type=image,name=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }},push=true

    # Вывод информации о собранном образе
    - name: Build summary
      run: |
        echo "Docker image built successfully!"
        echo " Image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}"
        echo " Tags: ${{ steps.meta.outputs.tags }}"
        echo " Digest: ${{ steps.build.outputs.digest }}"
        echo " Platforms: linux/amd64, linux/arm64"
